How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It specified exactly in which position the changes have been took place and help in changing the particular lines or word even though you have hundreds of lines.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It helps in changing the program code when ever you want or from where ever you want it to be changed and can compare between themselves.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    When it comes to manual choosing it is very helpful in comparing long line code easily and helps in storing the history at almost everytime when ever the user needs it to be saved. 
    When it comes to google docs autosave is some advantage but cannot store history of savings.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    May be google docs can easily differentiate each file when ever you save it seperately 
    but git has that simplicity to look back to the history and commit changes at particular positions at different times. 

How can you use the commands git log and git diff to view the history of files?

    git log is used to find all the history of the commits made to a program at different intervals of time.
    git diff is used to differentiate the commits between 2 ids and specify their position and the changes done to them.

How might using version control make you more confident to make changes that
could break something?

    it helps to know difference between each log and make corrections when a bug is present in the code and creates history of it.
    a bit easy but at times it is tough to handle the bug problems to seperately diffentiate only 2 commits at a time but not more then that.
    exploring diffent commits at a time and go back nd forth to the code and make changes at significantly at all times.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here